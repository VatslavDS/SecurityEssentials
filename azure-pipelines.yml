# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
# NB: For instructions on how to setup secure automated builds, goto Developer README.md

trigger:
  - master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Release.EnvironmentName: 'Integration' # This is so the web deployment xml transformation works

stages: 
- stage: Build_And_Unit_Tests
  jobs:
  - job: Build_And_Unit_Tests
    pool:
      name: Hosted VS2017
      timeoutInMinutes: 180
      demands:
      - msbuild
      - visualstudio
      - vstest
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 4.4.1'
      inputs:
        versionSpec: 4.4.1
    
    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        restoreSolution: '$(solution)'
    
    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:PackageLocation=$(Build.ArtifactStagingDirectory) /p:OutDir=$(Build.ArtifactStagingDirectory) /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: 'Run Unit tests'
      enabled: false # TODO: Removed temporarily to speed up build
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        pathtoCustomTestAdapters: '$(build.sourcesdirectory)/packages/NUnit3TestAdapter.3.16.1/build/net35/'
        testAssemblyVer2: |
          **\SecurityEssentials.Unit.Tests.dll
          !**\*TestAdapter.dll
          !**\obj\**'
        searchFolder: '$(build.sourcesdirectory)'
        runInParallel: true
        codeCoverageEnabled: true
        diagnosticsEnabled: true
        minimumExpectedTests: 10

    - task: dependency-check-build-task@5
      displayName: 'OWASP Dependency Checker'
      enabled: false # TODO: Removed temporarily to speed up build
      continueOnError: true
      inputs:
        projectName: 'Security Essentials'
        scanPath: '$(System.DefaultWorkingDirectory)'
        format: 'HTML'         

    - task: WhiteSource Bolt@20      
      displayName: 'Whitesource bolt'
      enabled: false # TODO: Removed temporarily to speed up build
      continueOnError: true
      inputs:
        cwd: '$(System.DefaultWorkingDirectory)'
        
    - task: AzSKARMTemplateChecker@4
      displayName: 'AzSK Arm Template Checker'
      enabled: false # TODO: Removed temporarily to speed up build.
      continueOnError: true
      inputs:
        ARMTemplateFilePath: '$(build.sourcesdirectory)\DeployPlatform\Arm\WebSite.json'
        ARMTemplateParameterFilePath: '$(build.sourcesdirectory)\DeployPlatform\Arm\WebSite.live.parameters.json'
        SkipControlsFromFile: '$(build.sourcesdirectory)\DeployPlatform\Arm\AzSKArmTemplateCheckExclude.csv'

    - task: CopyFiles@2
      displayName: 'Copy Test Adapter to $(build.artifactstagingdirectory)'
      #enabled: false # TODO: Removed temporarily to speed up build
      inputs:
        SourceFolder: '$(build.sourcesdirectory)\packages\NUnit3TestAdapter.3.16.1\'
        TargetFolder: '$(build.artifactstagingdirectory)\Tests\NUnit3TestAdapter.3.16.1\'

    - task: PublishSymbols@1
      displayName: 'Publish symbols path'
      inputs:
        SearchPattern: '**\bin\**\*.pdb'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        pathtoPublish: '$(build.artifactstagingdirectory)'
        artifactName: drop

    # About this step: https://docs.microsoft.com/en-us/azure/security/develop/security-code-analysis-customize#anti-malware-scanner-task
    # Requires build agent with Windows Defender enabled. Hosted Visual Studio 2017 and later provide such an agent
    - task: AntiMalware@3
      displayName: 'MSCA: Run windows defender Anti-Malware Scan'
      continueOnError: true
      inputs:
        InputType: 'Basic'
        ScanType: 'CustomScan'
        FileDirPath: '$(build.artifactstagingdirectory)'
        EnableServices: true
        SupportLogOnError: false
        TreatSignatureUpdateFailureAs: 'Warning'
        SignatureFreshness: 'UpToDate'
        TreatStaleSignatureAs: 'Error'

    # About this step: https://docs.microsoft.com/en-us/azure/security/develop/security-code-analysis-customize#credential-scanner-task
    - task: CredScan@2
      displayName: 'MSCA: Credential Scanner'
      continueOnError: true
      inputs:
        toolMajorVersion: 'V1'
        scanFolder: '$(build.artifactstagingdirectory)'

    - task: PublishSecurityAnalysisLogs@2
      displayName: 'MSCA: Publish findings'
      inputs:
        ArtifactName: 'CodeAnalysisLogs'
        ArtifactType: 'Container'
        AllTools: true
        ToolLogsNotFoundAction: 'Standard'

- stage: Acceptance_Tests
  dependsOn: Build_And_Unit_Tests
  condition: eq(0, 1) # TODO: Removed temporarily to speed up build
  jobs:
  #- job: Approve_Deployment
  #  pool: server
  #  steps:
  #  - task: ManualIntervention@8
  #    displayName: 'Approve deployment to test'
  #    inputs:
  #      instructions: 'Ready to deploy to $(Release.EnvironmentName) and run acceptance tests?'
  #      emailRecipients: '$(AdminEmailAddresses)'
  - job: Deploy_To_Integration
    pool:
      name: Hosted VS2017
      demands:
      - msbuild
      - visualstudio
      - vstest
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Artifacts: drop'
      inputs:
        artifact: drop

    - task: AzurePowerShell@3
      displayName: 'Pre Deployment steps'
      #enabled: false # TODO: Removed temporarily to speed up build
      inputs:
        azureSubscription: '$(ServiceConnection)'
        ScriptPath: '$(build.sourcesdirectory)\DeployPlatform\Scripts\PreDeploy.ps1'
        ScriptArguments: '-AzureLocation $(AzureLocation) -EnvironmentName $(EnvironmentName) -SiteName $(SiteName) -SiteBaseUrl $(SiteBaseUrl) -SubscriptionId $(SubscriptionId) -CloudFlareAuthEmail $(CloudFlareAuthEmail) -CloudFlareUserServiceKey $(CloudFlareUserServiceKey) -CloudFlareZoneName $(CloudFlareZoneName) -SqlAdminPassword $(SqlAdminPassword) -CloudFlarePlan $(CloudFlarePlan)' 
        azurePowerShellVersion: LatestVersion

    - task: AzureResourceGroupDeployment@2
      displayName: 'Deploy Azure Resources'
      #enabled: false # TODO: Removed temporarily to speed up build
      inputs:
        azureSubscription: '$(ServiceConnection)'
        resourceGroupName: '$(ResourceGroup)'
        location: '$(AzureLocation)'
        csmFile: '$(build.sourcesdirectory)\DeployPlatform\Arm\WebSite.json'
        csmParametersFile: '$(build.sourcesdirectory)\DeployPlatform\Arm\WebSite.int.parameters.json'
        overrideParameters: -adminEmailAddresses $(AdminEmailAddresses) -developerIpAddresses $(DeveloperIpAddresses) -siteBaseUrl $(SiteBaseUrl) -sqlAdminUserName $(SqlAdminUserName) -sqlserverName $(SqlServerName) -storageAccountNonVNetName $(StorageAccountNonVNetName) -subscriptionId $(SubscriptionId) -webDatabaseName $(WebDatabaseName) 
        deploymentOutputs: ArmTemplateOutput

    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy Website to AppService'
      #enabled: false # TODO: Removed temporarily to speed up build
      inputs:
        azureSubscription: '$(ServiceConnection)'
        WebAppName: '$(AppServiceName)'
        Package: '$(Pipeline.Workspace)/**/SecurityEssentials.Web.zip'
        ScriptType: 'Inline Script'
        InlineScript: |
          del /Q .\Web.*.config
        TakeAppOfflineFlag: true
        UseWebDeploy: true
        RemoveAdditionalFilesFlag: true
        ExcludeFilesFromAppDataFlag: true
        enableXmlTransform: true
    
    - task: AzurePowerShell@3
      displayName: 'Post Deployment steps'
      #enabled: false # TODO: Removed temporarily to speed up build
      inputs:
        azureSubscription: '$(ServiceConnection)'
        ScriptPath: '$(build.sourcesdirectory)\DeployPlatform\Scripts\PostDeploy.ps1'
        ScriptArguments: '-AzureLocation $(AzureLocation) -EnvironmentName $(EnvironmentName) -SiteName $(SiteName) -SiteBaseUrl $(SiteBaseUrl) -ArmTemplateOutput ''$(ArmTemplateOutput)'' -CloudFlareIpAddresses ''$(CloudFlareIpAddresses)'' -DeveloperIpAddresses ''$(DeveloperIpAddresses)'''
        azurePowerShellVersion: LatestVersion

    - task: AzurePowerShell@3
      displayName: 'Configure Acceptance tests to run'
      inputs:
        azureSubscription: '$(ServiceConnection)'
        ScriptPath: '$(build.sourcesdirectory)\DeployPlatform\Scripts\ConfigureForTesting.ps1'
        ScriptArguments: '-TestConfigPath "$(Pipeline.Workspace)\SecurityEssentials.Acceptance.Tests.dll.config" -WebServerUrl "https://$(SiteName)$(EnvironmentName).$(SiteBaseUrl)" -ResourceGroup "$(ResourceGroup)" -SqlServerName "$(SqlServerName)" -RuleName "AcceptanceTestRule-$(Build.BuildNumber)" -WebDatabaseName $(WebDatabaseName) -SqlAdminUserName $(SqlAdminUserName) -SqlAdminPassword $(SqlAdminPassword) -StorageAccountNonVNetName $(StorageAccountNonVNetName)'
        azurePowerShellVersion: LatestVersion

    - task: VSTest@2
      displayName: 'Run Acceptance tests'
      #enabled: false # TODO: Removed temporarily to speed up build
      timeoutInMinutes: 60
      inputs:
        testAssemblyVer2: |
         **\SecurityEssentials.Acceptance.Tests.dll
         !**\*TestAdapter.dll
         !**\obj\**
        searchFolder: '$(Pipeline.Workspace)/'
        pathtoCustomTestAdapters: '$(Pipeline.Workspace)/Tests/NUnit3TestAdapter.3.16.1/build/net35/'
        runInParallel: false
        codeCoverageEnabled: false
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        diagnosticsEnabled: false
        uiTests: true
        minimumExpectedTests: 2
        testFilterCriteria: 'TestCategory=Smoke'

    - task: AzurePowerShell@3
      displayName: 'Teardown Azure Resources'
      enabled: false # TODO: Removed temporarily to speed up build
      condition: always()
      inputs:
        azureSubscription: '$(ServiceConnection)'
        ScriptPath: '$(build.sourcesdirectory)\DeployPlatform\Scripts\TearDown.ps1'
        ScriptArguments: '-EnvironmentName $(EnvironmentName) -SiteName $(SiteName) -SubscriptionId $(SubscriptionId)'
        azurePowerShellVersion: LatestVersion

